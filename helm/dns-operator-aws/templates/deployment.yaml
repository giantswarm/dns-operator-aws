apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "resource.default.name"  . }}
  namespace: {{ include "resource.default.namespace"  . }}
  labels:
  {{- include "labels.common" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
  {{- include "labels.selector" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
    {{- include "labels.selector" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "resource.default.name"  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.registry.domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        env:
          - name: MANAGEMENT_CLUSTER_REGION
            value: {{ .Values.managementClusterRegion }}
          - name: AWS_SHARED_CREDENTIALS_FILE
            value: /home/.aws/credentials
        command:
        - /manager
        args:
        - --enable-leader-election
        - --management-cluster-basedomain={{ .Values.managementClusterBaseDomain }}
        - --management-cluster-arn={{ .Values.managementClusterRole }}
        - --workload-cluster-basedomain={{ .Values.workloadClusterBaseDomain }}
        resources:
          requests:
            cpu: 100m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 80Mi
        volumeMounts:
        - mountPath: /home/.aws
          name: credentials
      terminationGracePeriodSeconds: 10
      volumes:
      - name: credentials
        secret:
          secretName: {{ include "resource.default.name" . }}-aws-credentials
